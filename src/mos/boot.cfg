MEMORY {
    ZP:             start = $0070, size = $0020, type = rw;

    RAM_DEICE_BSS:  start = $600,  size = $0100, type = rw, define=yes;
    RAM_EXTRA_VECS: start = $00FFE0, size = $1A, type = rw;                     
    RAM_DEFAULT_HND:start = $009000, size = $100, type = rw;
    RAM_BBC_VECS:   start = $00FFFA, size = $06, type = rw;

    MOS_FONT:       start = $FFC000, size = $0300, file = %O, fill=yes, fillval=$FF;
    MOS:            start = $FFC300, size = $3CE0, file = %O, fill=yes, fillval=$FF;
    EXTRA_VECS:     start = $00FFE0, size = $1A,   file = %O, fill=yes, fillval=$FF;
    BBC_VECS:       start = $FFFFFA, size = $06,   file = %O, fill=yes, fillval=$FF;

}
SEGMENTS {
    boot_CODE:          load = MOS,                                     type = ro;
    CODE:               load = MOS,                                     type = ro;
    EXTRA_VECS:         load = EXTRA_VECS,      run = RAM_EXTRA_VECS,   type = ro, define = yes;
    BBC_VECS:           load = BBC_VECS,        run = RAM_BBC_VECS,     type = ro, define = yes;
    FONT:               load = MOS_FONT,                                type = ro;
    DEICE_BSS:          load = RAM_DEICE_BSS,                           type = bss, define = yes;
    debug_strings:      load = MOS,                                     type = ro;
    default_handlers:   load = MOS,             run = RAM_DEFAULT_HND,  type = rw, define = yes;

}
FEATURES {
}
SYMBOLS {
}